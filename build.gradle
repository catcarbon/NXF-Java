plugins {
    id "com.google.protobuf" version "0.8.18"
    id "io.freefair.lombok" version "6.4.3"
    id 'maven-publish'
    id 'java'
}

group 'io.wtmsb'
version '1.0-dev-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
}

repositories {
    mavenLocal()
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "io.wtmsb"
            artifactId = "NXF-Java"
            version = "$version"
            from components.java
        }
    }
}

protobuf {
    generatedFilesBaseDir = "$projectDir/target/generated-sources"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.20.1'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["target/generated-sources/main/java", "src/main/java"]
        }
    }
    test {
        java {
            srcDirs = ["target/generated-sources/test/java", "src/test/java"]
        }
    }
}

dependencies {
    implementation 'com.github.jitpack:gradle-simple:1.1'
    implementation 'com.google.protobuf:protobuf-java:3.21.1'
    implementation 'org.locationtech.spatial4j:spatial4j:0.8'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework:spring-core:5.3.20'
    implementation 'org.springframework:spring-context:5.3.20'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.3.Final'
    implementation 'org.hibernate.validator:hibernate-validator-cdi:6.2.3.Final'
    implementation 'org.glassfish:jakarta.el:3.0.3'
    implementation 'jakarta.validation:jakarta.validation-api:2.0.2'

    implementation 'org.slf4j:jul-to-slf4j:1.7.36'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.18.0'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    testImplementation platform('org.junit:junit-bom:5.8.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

afterEvaluate {
    generateEffectiveLombokConfig.mustRunAfter generateProto
    sourcesJar.mustRunAfter generateProto
}
