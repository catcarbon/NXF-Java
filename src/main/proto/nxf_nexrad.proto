syntax = "proto3";

import "nxf_base.proto";

package io.wtmsb.nxf;

message Metar {
  enum MetarCode {
    METAR = 0;
    SPECIAL = 1;
  }
  MetarCode metar_code = 1;
  string icao_identifier = 2;
  oneof observation {
    uint32 time = 3;
    bool automatic = 4;
  }
  string correction_indicator = 5;
  uint32 wind_direction = 6;
  uint32 wind_speed = 7;
  uint32 wind_gust = 8;
  uint32 wind_variation_start = 9;
  uint32 wind_variation_end = 10;
  uint32 prevailing_visibility = 11;
  string visibility_remarks = 12;
  message RunwayVisualRange {
    string runway = 1;
    enum RvrOutOfRangeIndicator {
      LESS_THAN = 0;
      MORE_THAN = 1;
    }
    RvrOutOfRangeIndicator rvr_out_of_range_indicator = 2;
    string rvr_value = 3;
    string rvr_variation = 4;
    enum RvrTrendIndicator {
      DOWNWARD = 0;
      NO_CHANGE = 1;
      UPWARD = 2;
    }
    RvrTrendIndicator rvr_trend_indicator = 5;
  }
  repeated RunwayVisualRange runway_visual_ranges = 13;
  string present_weather = 14; // too many terms... http://codes.wmo.int/306/4678
  message LayerAloft {
    enum CloudAmount {
      option allow_alias = true;
      SKC = 0;
      FEW = 1;
      SCT = 2;
      BKN = 3;
      OVC = 4;
      CLR = 0;
      CAVOK = 0;
      VV = 5;
    }
    CloudAmount cloud_amount = 1;
    uint32 layer_level = 2;
  }
  repeated LayerAloft layers_aloft = 15;
  int32 temperature = 16;
  int32 dew_point = 17;
  bool is_qnh = 18;
  uint32 altimeter_value = 19;
  string recent_weather = 20; // same as present_weather except preceded by 'RE'
  string windshear = 21;
  string remarks = 22;
}

message TerminalWeather {
  repeated Metar metar_lines = 2;
  repeated Metar taf_lines = 3; // TODO: define TAF message format
}

message AirSigMet {
  enum MetReportType {
    AIRMET = 0;
    SIGMET = 1;
  }
  MetReportType met_report_type = 1;
  enum MetReportSubType {
    SIERRA = 0;
    TANGO = 1;
    ZULU = 2;
    CONVECTIVE = 3;
    NON_CONVECTIVE = 4;
  }
  MetReportSubType met_report_sub_type = 2;
  repeated string main_body = 3;
}

message EnrouteWeather {
  repeated AirSigMet air_sig_mets = 2;
}

message NexradRaster {
  // TODO: implement NexradRaster message format
}