syntax = "proto3";

package io.wtmsb.nxf.message.radar;

/**
  NxfRadar.RadarTarget message:
  This message is analogous to a radar blip.
  Nxf data source should not attempt to modify an already-sent RadarTarget message.
  Nxf data client should make the domain object for this message immutable.
 */
message RadarTarget {
  double lat = 1;  // mandatory id component
  double lon = 2;  // mandatory id component
  uint64 return_time = 3;  // mandatory id component
  optional bytes beacon_code = 4;  // optional id component but will be used in almost all cases
  optional uint32 reported_altitude = 5;
  optional bytes mode_s_address = 6;  // optional id component
  uint32 ground_speed = 7;
  uint32 ground_track = 8;
}

/**
  NxfRadar.FlightData message:
  This message is analogous to a flight plan.
 */
message FlightData {
  message Key {
    string callsign = 1;  // mandatory key component
    optional bytes icao_address = 2;  // optional key component
  }
  Key identification = 1;
  optional bytes assigned_beacon_code = 3;
  optional string aircraft_type = 4;
  optional string equipment_suffix = 5;

  enum FlightRule {
    INSTRUMENT = 0;
    VISUAL = 1;
    SPECIAL_VISUAL = 2;
    DEFENSE_VISUAL = 3;
  }
  optional FlightRule flight_rule = 6;

  optional string departure_point = 7;
  optional string destination = 8;
  optional uint32 requested_altitude = 9;
  optional string route_string = 10;

  reserved 11 to 19;

  //optional uint64 last_updated = 20;

  optional ControllingUnit current_controller = 21;
  optional ControllingUnit next_controller = 22;
}

message ControllingUnit {
  string facility = 1;
  string sector = 2;
}

message FlightDataSupplement {
  optional uint32 assigned_temporary_altitude = 23;
  optional uint32 assigned_final_altitude = 24;
  optional string pad_1 = 25;
  optional string pad_2 = 26;
  optional string runway = 27;
  optional string exit_fix = 28;

  enum LeaderLineDirection {
    DEFAULT = 0;
    NW = 1;
    N = 2;
    NE = 3;
    W = 4;
    HIDE = 5;
    E = 6;
    SW = 7;
    S = 8;
    SE = 9;
  }
  optional LeaderLineDirection leader_line_direction = 29;
}
