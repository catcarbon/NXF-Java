syntax = "proto3";

package io.wtmsb.nxf.message.radar;

/**
  Top level message used to draw objects on the scope.
  Includes radar return and minimum information necessary to construct a data block.
 */
message Track {
  uint32 id = 1;

  // Radar targets must live inside a track
  message RadarTarget {
    string lat = 1;
    string lon = 2;
    enum TransponderMode {
      NO_MODE = 0;
      MODE_A = 1;
      MODE_C = 2;
      MODE_S = 3;
    }
    TransponderMode transponder_mode = 3;
    bytes beacon_code = 4;
    //uint32 calculated_ground_speed = 5;
    //uint32 calculated_heading = 6;
    uint64 return_time = 7;
    optional uint32 reported_altitude = 8;  // Needs at least Mode C
    optional bytes mode_s_address = 9;  // Mode S only
  }
  repeated RadarTarget radar_targets = 2;  // client: store history dots, derive ground speed and heading

  optional FlightStrip flight_strip = 3;

  message ControllingUnit {
    string facility = 1;
    string sector = 2;
  }
  optional ControllingUnit current_controller = 4;
  optional ControllingUnit next_controller = 5;

  reserved 6 to 10;

  message DataBlockSupplement {
    // lld has a default type so it won't be empty
    enum LeaderLineDirection {
      DEFAULT = 0;
      NW = 1;
      N = 2;
      NE = 3;
      W = 4;
      HIDE = 5;
      E = 6;
      SW = 7;
      S = 8;
      SE = 9;
    }
    LeaderLineDirection leader_line_direction = 1;

    optional uint32 assigned_temporary_altitude = 2;
    optional string pad_1 = 3;
    optional string pad_2 = 4;
    optional string runway = 5;
    optional string exit_fix = 6;
  }
  DataBlockSupplement data_block_supplement = 11;
}

/**
  Flight strip message that could be used to supplement data block display.
 */
message FlightStrip {
  uint32 id = 1;
  string aircraft_type = 2;
  string aircraft_callsign = 3;
  optional bytes aircraft_address = 4;  // Mode S only

  enum WakeCategory {
    NO_WEIGHT = 0;
    CAT_A = 1;
    CAT_B = 2;
    CAT_C = 3;
    CAT_D = 4;
    CAT_E = 5;
    CAT_F = 6;
  }
  WakeCategory wake_category = 5;

  enum FlightRule {
    INSTRUMENT = 0;
    VISUAL = 1;
    SPECIAL_VISUAL = 2;
    DEFENSE_VISUAL = 3;
  }
  FlightRule flight_rule = 6;

  string destination = 7;
  uint32 requested_altitude = 8;
  bytes assigned_beacon_code = 9;
  optional string route_string = 10;
}
